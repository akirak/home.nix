#!/usr/bin/env bash

set -e

# Git branch on which a new commit is added
branch=master

has() { command -v "$1" >/dev/null 2>/dev/null; }

err() { echo "Error: $*" >&2; }

require() {
    local prog="$1"
    if ! has "$prog"; then
        err "Missing a required executable $prog"
        exit 22
    fi
}

require git
require rm
require cut
require tr

# Ensure that this script is run at the root of a Git repository
if [ ! -d .git ]; then
    err "This script must be run at the root of a Git repository"
    exit 21
fi

# Update the index from the working tree and retrieve its hash
ref=refs/heads/$branch
parent=$(git show-ref -s $branch)
git add .
tree=$(git write-tree)

# Compare the tree with the branch and update it if there are changes
filelist=$(mktemp)

if git diff-tree --exit-code --name-only "$parent" "$tree" > "$filelist"; then
    rm "$filelist"
    echo "Not changed"
else
    msg=$(mktemp)
    echo -n "Auto commit: " > "$msg"
    numfiles=$(wc -l "$filelist" | cut -d' ' -f1)
    echo "$numfiles files changed"
    if [[ "$numfiles" -gt 1 ]]; then
        echo -n "($numfiles files) " >> "$msg"
    fi
    tr '\n' ' ' < "$filelist" >> "$msg"
    commit=$(git commit-tree -p "$parent" -F "$msg" "$tree")
    rm "$msg" "$filelist"
    git update-ref "$ref" "$commit" "$parent"
    echo "Created a new commit"
fi
