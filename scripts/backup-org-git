#!/bin/sh

# Git branch on which a new commit is added
branch=master

# The path to the root of the working tree
dir=$HOME/org

GIT=$(command -v git)

# Fail if the working directory is not ~/org
if [ $PWD != $dir ]; then
    echo "This script must be run at $dir"
    exit 1
fi

if ! which $GIT >/dev/null 2>/dev/null; then
   echo "git is unavailable" >2
   exit 1
fi

# Update the index from the working tree and retrieve its hash
ref=refs/heads/$branch
parent=$($GIT show-ref -s $branch)
$GIT add .
tree=$($GIT write-tree)

# Compare the tree with the branch and update it if there are changes
filelist=$(mktemp)
$GIT diff-tree --exit-code --name-only $parent $tree > $filelist
if [ $? -eq 1 ]; then
    msg=$(mktemp)
    echo -n "Auto commit: " > $msg
    numfiles=$(wc -l $filelist | cut -d' ' -f1)
    if [ $numfiles -gt 1 ]; then
      echo -n "($numfiles files) " >> $msg
    fi
    cat $filelist | tr '\n' ' ' >> $msg
    commit=$($GIT commit-tree -p $parent -F $msg $tree)
    rm $msg $filelist
    $GIT update-ref $ref $commit $parent
    echo "Created a new commit"
else
    rm $filelist
    echo "Not changed"
fi
